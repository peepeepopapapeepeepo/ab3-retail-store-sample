k apply -f catalog
k apply -f carts
k apply -f orders
k apply -f checkout
k apply -f assets
k apply -f ui

# Create PSQL Database
# -> https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_GettingStarted.CreatingConnecting.PostgreSQL.html
# -> https://dev.to/johndotowl/postgresql-16-installation-on-ubuntu-2204-51ia
# -> Create the read/write user | https://docs.aws.amazon.com/prescriptive-guidance/latest/patterns/create-application-users-and-roles-in-aurora-postgresql-compatible.html

sudo sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list'
curl -fsSL https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo gpg --dearmor -o /etc/apt/trusted.gpg.d/postgresql.gpg
sudo apt update
sudo apt install postgresql-client-16

psql \
--host=rds-ab3-apse1-poc-001.cluster-c3u22ackc17m.ap-southeast-1.rds.amazonaws.com \
--port=5432 \
--dbname=postgres \
--username=root

CREATE DATABASE orders;

#
# Create Users
#

-- Create the application user
CREATE USER app_user WITH PASSWORD 't//wkcXdQCSQcEt5dqXJWAfRx4zXKb9MfbiCxizMwps55pu1rshxS21oNGZiBeaSZNdtdgE/nc4a4e1qbYiU7g==';

-- Grant connect permission to the orders database
GRANT CONNECT ON DATABASE orders TO app_user;

-- Connect to the orders database first, then run these:
\c orders

-- Grant schema usage
GRANT USAGE ON SCHEMA public TO app_user;

-- Grant all privileges on existing tables
GRANT ALL PRIVILEGES ON ALL TABLES IN SCHEMA public TO app_user;

-- Grant all privileges on existing sequences
GRANT ALL PRIVILEGES ON ALL SEQUENCES IN SCHEMA public TO app_user;

-- Grant all privileges on existing functions
GRANT ALL PRIVILEGES ON ALL FUNCTIONS IN SCHEMA public TO app_user;

-- Set default privileges for future objects
ALTER DEFAULT PRIVILEGES IN SCHEMA public 
    GRANT ALL PRIVILEGES ON TABLES TO app_user;
ALTER DEFAULT PRIVILEGES IN SCHEMA public 
    GRANT ALL PRIVILEGES ON SEQUENCES TO app_user;
ALTER DEFAULT PRIVILEGES IN SCHEMA public 
    GRANT ALL PRIVILEGES ON FUNCTIONS TO app_user;
ALTER DEFAULT PRIVILEGES IN SCHEMA public 
    GRANT ALL PRIVILEGES ON TYPES TO app_user;

-- Grant schema creation permission within the database
GRANT CREATE ON SCHEMA public TO app_user;


#
# Delete Users
#

-- First, revoke all privileges from the user
REVOKE ALL PRIVILEGES ON ALL TABLES IN SCHEMA public FROM app_user;
REVOKE ALL PRIVILEGES ON ALL SEQUENCES IN SCHEMA public FROM app_user;
REVOKE ALL PRIVILEGES ON ALL FUNCTIONS IN SCHEMA public FROM app_user;
REVOKE ALL PRIVILEGES ON SCHEMA public FROM app_user;
REVOKE CONNECT ON DATABASE orders FROM app_user;

-- If the user owns any objects, reassign ownership (replace postgres with your admin user)
REASSIGN OWNED BY app_user TO postgres;

-- Drop any remaining objects owned by the user
DROP OWNED BY app_user;

-- Finally, drop the user
DROP USER app_user;

-- To verify the user is deleted
\du app_user

#
# Docker
#

docker image pull public.ecr.aws/aws-containers/retail-store-sample-assets:0.8.5
docker image pull public.ecr.aws/aws-containers/retail-store-sample-cart:0.8.5
docker image pull public.ecr.aws/aws-containers/retail-store-sample-catalog:0.8.5
docker image pull public.ecr.aws/aws-containers/retail-store-sample-checkout:0.8.5
docker image pull public.ecr.aws/aws-containers/retail-store-sample-orders:0.8.5
docker image pull public.ecr.aws/aws-containers/retail-store-sample-ui:0.8.5
docker image pull public.ecr.aws/docker/library/rabbitmq:3-management
docker image pull public.ecr.aws/docker/library/mysql:8.0
docker image pull amazon/dynamodb-local:1.20.0

docker tag public.ecr.aws/aws-containers/retail-store-sample-assets:0.8.5 711387113538.dkr.ecr.ap-southeast-1.amazonaws.com/ecr-ab3-apse1-poc-001/retail-store/assets:0.8.5
docker tag public.ecr.aws/aws-containers/retail-store-sample-cart:0.8.5 711387113538.dkr.ecr.ap-southeast-1.amazonaws.com/ecr-ab3-apse1-poc-001/retail-store/cart:0.8.5
docker tag public.ecr.aws/aws-containers/retail-store-sample-catalog:0.8.5 711387113538.dkr.ecr.ap-southeast-1.amazonaws.com/ecr-ab3-apse1-poc-001/retail-store/catalog:0.8.5
docker tag public.ecr.aws/aws-containers/retail-store-sample-checkout:0.8.5 711387113538.dkr.ecr.ap-southeast-1.amazonaws.com/ecr-ab3-apse1-poc-001/retail-store/checkout:0.8.5
docker tag public.ecr.aws/aws-containers/retail-store-sample-orders:0.8.5 711387113538.dkr.ecr.ap-southeast-1.amazonaws.com/ecr-ab3-apse1-poc-001/retail-store/orders:0.8.5
docker tag public.ecr.aws/aws-containers/retail-store-sample-ui:0.8.5 711387113538.dkr.ecr.ap-southeast-1.amazonaws.com/ecr-ab3-apse1-poc-001/retail-store/ui:0.8.5
docker tag public.ecr.aws/docker/library/rabbitmq:3-management 711387113538.dkr.ecr.ap-southeast-1.amazonaws.com/ecr-ab3-apse1-poc-001/rabbitmq:3-management
docker tag public.ecr.aws/docker/library/mysql:8.0 711387113538.dkr.ecr.ap-southeast-1.amazonaws.com/ecr-ab3-apse1-poc-001/mysql:8.0
docker tag amazon/dynamodb-local:1.20.0 711387113538.dkr.ecr.ap-southeast-1.amazonaws.com/ecr-ab3-apse1-poc-001/dynamodb-local:1.20.0

docker image ls 

aws ecr get-login-password --region ap-southeast-1 | docker login --username AWS --password-stdin 711387113538.dkr.ecr.ap-southeast-1.amazonaws.com

docker push 711387113538.dkr.ecr.ap-southeast-1.amazonaws.com/ecr-ab3-apse1-poc-001/retail-store/assets:0.8.5
docker push 711387113538.dkr.ecr.ap-southeast-1.amazonaws.com/ecr-ab3-apse1-poc-001/retail-store/cart:0.8.5
docker push 711387113538.dkr.ecr.ap-southeast-1.amazonaws.com/ecr-ab3-apse1-poc-001/retail-store/catalog:0.8.5
docker push 711387113538.dkr.ecr.ap-southeast-1.amazonaws.com/ecr-ab3-apse1-poc-001/retail-store/checkout:0.8.5
docker push 711387113538.dkr.ecr.ap-southeast-1.amazonaws.com/ecr-ab3-apse1-poc-001/retail-store/orders:0.8.5
docker push 711387113538.dkr.ecr.ap-southeast-1.amazonaws.com/ecr-ab3-apse1-poc-001/retail-store/ui:0.8.5
docker push 711387113538.dkr.ecr.ap-southeast-1.amazonaws.com/ecr-ab3-apse1-poc-001/rabbitmq:3-management
docker push 711387113538.dkr.ecr.ap-southeast-1.amazonaws.com/ecr-ab3-apse1-poc-001/mysql:8.0
docker push 711387113538.dkr.ecr.ap-southeast-1.amazonaws.com/ecr-ab3-apse1-poc-001/dynamodb-local:1.20.0